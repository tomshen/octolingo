// Generated by CoffeeScript 1.6.3
(function() {
  var apiKey, recognition, speak, transcript, translate, translateLangs;

  recognition = new webkitSpeechRecognition();

  recognition.continuous = true;

  recognition.interminResults = false;

  apiKey = 'AIzaSyDUpThQIyJRlszXEnT2HvSMbPbObbcYNE4';

  translateLangs = ['af,ar,az,be,bg,bn,bs,ca,ceb,cs,cy,da,de,el,en,eo,es,et,eu,fa,fi,fr,ga,gl,gu,hi,hmn,hr,ht,hu,id,is,it,iw,ja,jw,ka,km,kn,ko,la,lo,lt,lv,mk,mr,ms,mt,nl,no,pl,pt,ro,ru,sk,sl,sq,sr,sv,sw,ta,te,th,tl,tr,uk,ur,vi,yi,zh,zh-TW'];

  translate = function(text, sourceLang, targetLang, callback) {
    return $.get("https://www.googleapis.com/language/translate/v2?key=" + apiKey + "&q=" + text + "&source=" + sourceLang + "&target=" + targetLang, function(data) {
      return callback(data.data.translations[0].translatedText, targetLang);
    });
  };

  speak = function(text, language) {
    var msg;
    msg = new SpeechSynthesisUtterance();
    msg.text = text;
    msg.lang = language;
    $('#output').append(text);
    return window.speechSynthesis.speak(msg);
  };

  transcript = '';

  recognition.onstart = function() {
    return recognition.lang = 'en';
  };

  recognition.onresult = function(event) {
    var result, _i, _len, _ref;
    _ref = event.results;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      result = _ref[_i];
      translate(result[0].transcript, recognition.lang, 'es', speak);
      transcript += result[0].transcript;
    }
    return $('#input').text(transcript);
  };

  recognition.onerror = function(err) {
    return console.error(err);
  };

  recognition.onend = function() {};

  recognition.start();

}).call(this);
